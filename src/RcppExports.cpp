// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// norm_fdata_c
arma::mat norm_fdata_c(List v);
RcppExport SEXP _rofanova_norm_fdata_c(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(norm_fdata_c(v));
    return rcpp_result_gen;
END_RCPP
}
// norm_fdata_c_sur
arma::mat norm_fdata_c_sur(List v);
RcppExport SEXP _rofanova_norm_fdata_c_sur(SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(norm_fdata_c_sur(v));
    return rcpp_result_gen;
END_RCPP
}
// wfun_c
arma::mat wfun_c(arma::mat x, int k, double ktun);
RcppExport SEXP _rofanova_wfun_c(SEXP xSEXP, SEXP kSEXP, SEXP ktunSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type ktun(ktunSEXP);
    rcpp_result_gen = Rcpp::wrap(wfun_c(x, k, ktun));
    return rcpp_result_gen;
END_RCPP
}
// sum_fdata_c
List sum_fdata_c(List x);
RcppExport SEXP _rofanova_sum_fdata_c(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_fdata_c(x));
    return rcpp_result_gen;
END_RCPP
}
// sum_fdata_c_sur
List sum_fdata_c_sur(List x);
RcppExport SEXP _rofanova_sum_fdata_c_sur(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_fdata_c_sur(x));
    return rcpp_result_gen;
END_RCPP
}
// div_fdata_c
List div_fdata_c(List x, double k);
RcppExport SEXP _rofanova_div_fdata_c(SEXP xSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(div_fdata_c(x, k));
    return rcpp_result_gen;
END_RCPP
}
// div_fdata_c_sur
List div_fdata_c_sur(List x, double k);
RcppExport SEXP _rofanova_div_fdata_c_sur(SEXP xSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(div_fdata_c_sur(x, k));
    return rcpp_result_gen;
END_RCPP
}
// stdandar
List stdandar(List x, List mu, List sig);
RcppExport SEXP _rofanova_stdandar(SEXP xSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type mu(muSEXP);
    Rcpp::traits::input_parameter< List >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(stdandar(x, mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// stdandar_sur
List stdandar_sur(List x, List mu, List sig);
RcppExport SEXP _rofanova_stdandar_sur(SEXP xSEXP, SEXP muSEXP, SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type mu(muSEXP);
    Rcpp::traits::input_parameter< List >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(stdandar_sur(x, mu, sig));
    return rcpp_result_gen;
END_RCPP
}
// center_sur
List center_sur(List x, List mu);
RcppExport SEXP _rofanova_center_sur(SEXP xSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type mu(muSEXP);
    rcpp_result_gen = Rcpp::wrap(center_sur(x, mu));
    return rcpp_result_gen;
END_RCPP
}
// dife
arma::mat dife(arma::mat resi_new, arma::mat resi);
RcppExport SEXP _rofanova_dife(SEXP resi_newSEXP, SEXP resiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type resi_new(resi_newSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type resi(resiSEXP);
    rcpp_result_gen = Rcpp::wrap(dife(resi_new, resi));
    return rcpp_result_gen;
END_RCPP
}
// iteration
List iteration(List x, List mu0, List sig0, double kpsi, double ktun, double tol, int maxit);
RcppExport SEXP _rofanova_iteration(SEXP xSEXP, SEXP mu0SEXP, SEXP sig0SEXP, SEXP kpsiSEXP, SEXP ktunSEXP, SEXP tolSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< List >::type sig0(sig0SEXP);
    Rcpp::traits::input_parameter< double >::type kpsi(kpsiSEXP);
    Rcpp::traits::input_parameter< double >::type ktun(ktunSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration(x, mu0, sig0, kpsi, ktun, tol, maxit));
    return rcpp_result_gen;
END_RCPP
}
// iteration_sur
List iteration_sur(List x, List mu0, List sig0, int kpsi, double ktun, double tol, int maxit);
RcppExport SEXP _rofanova_iteration_sur(SEXP xSEXP, SEXP mu0SEXP, SEXP sig0SEXP, SEXP kpsiSEXP, SEXP ktunSEXP, SEXP tolSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< List >::type sig0(sig0SEXP);
    Rcpp::traits::input_parameter< int >::type kpsi(kpsiSEXP);
    Rcpp::traits::input_parameter< double >::type ktun(ktunSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration_sur(x, mu0, sig0, kpsi, ktun, tol, maxit));
    return rcpp_result_gen;
END_RCPP
}
// Mwgt_r
arma::mat Mwgt_r(arma::mat x, arma::mat cc, Rcpp::StringVector family);
RcppExport SEXP _rofanova_Mwgt_r(SEXP xSEXP, SEXP ccSEXP, SEXP familySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type family(familySEXP);
    rcpp_result_gen = Rcpp::wrap(Mwgt_r(x, cc, family));
    return rcpp_result_gen;
END_RCPP
}
// iteration_ho
List iteration_ho(List x, List mu0, List sig0, arma::mat cc, Rcpp::StringVector family, double tol, int maxit);
RcppExport SEXP _rofanova_iteration_ho(SEXP xSEXP, SEXP mu0SEXP, SEXP sig0SEXP, SEXP ccSEXP, SEXP familySEXP, SEXP tolSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< List >::type sig0(sig0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type family(familySEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration_ho(x, mu0, sig0, cc, family, tol, maxit));
    return rcpp_result_gen;
END_RCPP
}
// iteration_ho_sur
List iteration_ho_sur(List x, List mu0, List sig0, arma::mat cc, Rcpp::StringVector family, double tol, int maxit);
RcppExport SEXP _rofanova_iteration_ho_sur(SEXP xSEXP, SEXP mu0SEXP, SEXP sig0SEXP, SEXP ccSEXP, SEXP familySEXP, SEXP tolSEXP, SEXP maxitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type mu0(mu0SEXP);
    Rcpp::traits::input_parameter< List >::type sig0(sig0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type family(familySEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    rcpp_result_gen = Rcpp::wrap(iteration_ho_sur(x, mu0, sig0, cc, family, tol, maxit));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rofanova_norm_fdata_c", (DL_FUNC) &_rofanova_norm_fdata_c, 1},
    {"_rofanova_norm_fdata_c_sur", (DL_FUNC) &_rofanova_norm_fdata_c_sur, 1},
    {"_rofanova_wfun_c", (DL_FUNC) &_rofanova_wfun_c, 3},
    {"_rofanova_sum_fdata_c", (DL_FUNC) &_rofanova_sum_fdata_c, 1},
    {"_rofanova_sum_fdata_c_sur", (DL_FUNC) &_rofanova_sum_fdata_c_sur, 1},
    {"_rofanova_div_fdata_c", (DL_FUNC) &_rofanova_div_fdata_c, 2},
    {"_rofanova_div_fdata_c_sur", (DL_FUNC) &_rofanova_div_fdata_c_sur, 2},
    {"_rofanova_stdandar", (DL_FUNC) &_rofanova_stdandar, 3},
    {"_rofanova_stdandar_sur", (DL_FUNC) &_rofanova_stdandar_sur, 3},
    {"_rofanova_center_sur", (DL_FUNC) &_rofanova_center_sur, 2},
    {"_rofanova_dife", (DL_FUNC) &_rofanova_dife, 2},
    {"_rofanova_iteration", (DL_FUNC) &_rofanova_iteration, 7},
    {"_rofanova_iteration_sur", (DL_FUNC) &_rofanova_iteration_sur, 7},
    {"_rofanova_Mwgt_r", (DL_FUNC) &_rofanova_Mwgt_r, 3},
    {"_rofanova_iteration_ho", (DL_FUNC) &_rofanova_iteration_ho, 7},
    {"_rofanova_iteration_ho_sur", (DL_FUNC) &_rofanova_iteration_ho_sur, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_rofanova(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
